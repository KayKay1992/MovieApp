React Native Components.

Setup Styling(setting up native wind)

Nativewind allows u to style your app just like you use tailwind css to style your web app.

1. open a new terminal and run this command npm install nativewind tailwindcss react-native-reanimated react-native-safe-area-context.
2. After installing it run this comman npx tailwindcss init, this will generate a configuration file, sometimes this might give you error if the tailwind css version insatlled is not compatible with the nativewind, if there is error run this command npm list tailwindcss, unInstall tailwind css  with this command npm uninstall tailwindcss and install the one matching the nativewind.

3. in tailwind.config.js we reconfigured the file to enable tailwind to style everything within the app folder that end with those extension. we also added a babel preset.

4. create a new file within the app folder and call it global.css and add the base, components and utilities from tailwind.

5.then we have to set up the babel preset by creating a new file in the root directory and call it babel.config.js and set it up.

6. modify your metro.config.js by opening your terminal and run this command npx expo customize metro.config.js, this will create that config file, so we replace the generated one with the one we copied from nativewind instatallation doc https://www.nativewind.dev/docs/getting-started/installation. but make sure the path points exactly where your global css is located so we './app/global.css' bcomes our input path.

7.Then we go to our app folder, _layout.tsx and import the global.css for styling.

8. At the root of your project create a new file called nativewind-env.d.ts and within it add this piece of code /// <reference types="nativewind/types" /> including the 3 forward slash this will enable typescript to recognise nativewind styling class preventing constant error messages.

9. To test what you have done stop your project and restart it with this command npx expo start --clear, this will make sure all the changes sticked to the project.

10. Now to check whether the nativewind style is working go to index.tsx instead of those default inline styles, we remove it and rather give it a className. After making changes, you will now see the changes made.

11. Now to define custom styles like color, we will go to tailwind.config.js file define some extended styles like colors, now go back to index.tsx file where replace the color style with with text primary and it will take the color u defined in tailwind.config.js